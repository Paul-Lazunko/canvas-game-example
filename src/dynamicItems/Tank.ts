import { ADynamicItem } from '../abstract/ADynamicItem';
import { EOrientation, TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_THIRD } from '../constants';
import { IDynamicItemOptions, ISize } from '../interfaces';

export class Tank extends ADynamicItem {

  public orientation: EOrientation;

  public size: ISize = {
    width: 13,
    height: 13
  };

  protected renderingData: { [key: string]: string[][] } = {
    y: [
      [ TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST,  null, null, null,  null, null, TANK_COLOR_FIRST,TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST ],
      [ TANK_COLOR_SECOND, TANK_COLOR_SECOND, TANK_COLOR_SECOND, TANK_COLOR_SECOND,  null, null, null,  null, null, TANK_COLOR_SECOND,TANK_COLOR_SECOND, TANK_COLOR_SECOND, TANK_COLOR_SECOND ],
      [ TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST,  TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST,  TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST,TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST ],
      [ TANK_COLOR_SECOND, TANK_COLOR_SECOND, TANK_COLOR_SECOND, TANK_COLOR_SECOND,  TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST,  TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_SECOND,TANK_COLOR_SECOND, TANK_COLOR_SECOND, TANK_COLOR_SECOND ],
      [ TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST,  TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_THIRD,  TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST,TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST ],
      [ TANK_COLOR_SECOND, TANK_COLOR_SECOND, TANK_COLOR_SECOND, TANK_COLOR_SECOND,  TANK_COLOR_FIRST, TANK_COLOR_THIRD, TANK_COLOR_THIRD,  TANK_COLOR_THIRD, TANK_COLOR_FIRST, TANK_COLOR_SECOND,TANK_COLOR_SECOND, TANK_COLOR_SECOND, TANK_COLOR_SECOND ],
      [ TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST,  TANK_COLOR_THIRD, TANK_COLOR_THIRD, TANK_COLOR_THIRD,  TANK_COLOR_THIRD, TANK_COLOR_THIRD, TANK_COLOR_FIRST,TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST ],
      [ TANK_COLOR_SECOND, TANK_COLOR_SECOND, TANK_COLOR_SECOND, TANK_COLOR_SECOND,  TANK_COLOR_FIRST, TANK_COLOR_THIRD, TANK_COLOR_THIRD,  TANK_COLOR_THIRD, TANK_COLOR_FIRST, TANK_COLOR_SECOND,TANK_COLOR_SECOND, TANK_COLOR_SECOND, TANK_COLOR_SECOND ],
      [ TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST,  TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_THIRD,  TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST,TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST ],
      [ TANK_COLOR_SECOND, TANK_COLOR_SECOND, TANK_COLOR_SECOND, TANK_COLOR_SECOND,  TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST,  TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_SECOND,TANK_COLOR_SECOND, TANK_COLOR_SECOND, TANK_COLOR_SECOND ],
      [ TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST,  TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST,  TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST,TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST ],
      [ TANK_COLOR_SECOND, TANK_COLOR_SECOND, TANK_COLOR_SECOND, TANK_COLOR_SECOND,  null, null, null,  null, null, TANK_COLOR_SECOND,TANK_COLOR_SECOND, TANK_COLOR_SECOND, TANK_COLOR_SECOND ],
      [ TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST,  null, null, null,  null, null, TANK_COLOR_FIRST,TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST ],

    ],
    x: [
      [ TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST, TANK_COLOR_SECOND,  TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST, TANK_COLOR_SECOND,TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST ],
      [ TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST, TANK_COLOR_SECOND,  TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST, TANK_COLOR_SECOND,TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST ],
      [ TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST, TANK_COLOR_SECOND,  TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST, TANK_COLOR_SECOND,TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST ],
      [ TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST, TANK_COLOR_SECOND,  TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST, TANK_COLOR_SECOND,TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST ],
      [  null, null, TANK_COLOR_FIRST, TANK_COLOR_FIRST,  TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_THIRD,  TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST,TANK_COLOR_FIRST,  null, null ],
      [ null, null, TANK_COLOR_FIRST, TANK_COLOR_FIRST,  TANK_COLOR_FIRST, TANK_COLOR_THIRD, TANK_COLOR_THIRD,  TANK_COLOR_THIRD, TANK_COLOR_FIRST, TANK_COLOR_FIRST,TANK_COLOR_FIRST,  null, null],
      [  null, null, TANK_COLOR_FIRST, TANK_COLOR_FIRST,  TANK_COLOR_THIRD, TANK_COLOR_THIRD, TANK_COLOR_THIRD,  TANK_COLOR_THIRD, TANK_COLOR_THIRD, TANK_COLOR_FIRST,TANK_COLOR_FIRST,  null, null ],
      [  null, null, TANK_COLOR_FIRST, TANK_COLOR_FIRST,  TANK_COLOR_FIRST, TANK_COLOR_THIRD, TANK_COLOR_THIRD,  TANK_COLOR_THIRD, TANK_COLOR_FIRST, TANK_COLOR_FIRST,TANK_COLOR_FIRST,  null, null ],
      [  null, null, TANK_COLOR_FIRST, TANK_COLOR_FIRST,  TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_THIRD,  TANK_COLOR_FIRST, TANK_COLOR_FIRST, TANK_COLOR_FIRST,TANK_COLOR_FIRST,  null, null ],
      [ TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST, TANK_COLOR_SECOND,  TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST, TANK_COLOR_SECOND,TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST ],
      [ TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST, TANK_COLOR_SECOND,  TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST, TANK_COLOR_SECOND,TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST ],
      [ TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST, TANK_COLOR_SECOND,  TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST, TANK_COLOR_SECOND,TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST ],
      [ TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST, TANK_COLOR_SECOND,  TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST, TANK_COLOR_SECOND,TANK_COLOR_FIRST, TANK_COLOR_SECOND, TANK_COLOR_FIRST ],
    ],
  };

  public armor: number = 10;
  public health: number = 100;
  public speed: number = 7;

  constructor(options: IDynamicItemOptions) {
    super();
    this.orientation =  EOrientation.HORIZONTAL;
    this.position = options.position;
    this.weapons = options.weapons;
  }

  render(ctx: any): void {
    const matrix: string[][] = this.renderingData[this.orientation];
    for ( let i =0; i < matrix.length; i = i + 1 ) {
      const matrixItem: string[] = matrix[i];
      for ( let j = 0; j < matrixItem.length; j = j + 1 ) {
        ctx.fillStyle = matrixItem[j];
        ctx.fillRect(this.position.x + j, this.position.y + i, 1,1);
      }
    }
  }

  die(ctx: any) {
    ctx.fillStyle = '#dd0';
    ctx.fillRect(this.position.x, this.position.y, this.size.width,this.size.height);
  }

}
